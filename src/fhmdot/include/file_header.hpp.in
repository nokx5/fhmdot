/* header identifier for yofi */
#pragma once

#include <string>

namespace fhmdot
{
      typedef enum
      {
            fhm_fast = 1,   // ZSTD_fast
            fhm_storage = 9 // ZSTD_btultra2
      } fhm_level;

      namespace fheader
      {

            const std::string static version()
            {
                  return "V:@PROJECT_VERSION@";
            }
            const std::string static precision()
            {
#ifndef FLOAT_PRECISION
                  return "P:T";
#else
                  return "P:F";
#endif
            }
            const std::string static runtime_complex_number(bool is_complex)
            {
                  if (is_complex)
                  {
                        return "C:T";
                  }
                  else
                  {
                        return "C:F";
                  };
            }
            const std::string static runtime_compression(fhm_level level = fhm_fast)
            {
                  return "L:" + std::to_string(level);
            }

            const std::string static text(bool is_complex, fhm_level level = fhm_fast)
            {
                  return version() + "," + precision() + "," + runtime_complex_number(level) + "," + runtime_compression(level);
            }

      } // namespace fheader

} // namespace fhmdot
